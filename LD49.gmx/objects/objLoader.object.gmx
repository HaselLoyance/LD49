<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLoaderBg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 2400
rot = 0
t=0//3000
d=0
instance_create(d+400,50+335, objSpinnyLoader)
rot_off = 0

prompts = ds_list_create()
ds_list_add(prompts, "Loading...")
ds_list_add(prompts, "Initializing local server...")
ds_list_add(prompts, "Measuring your mom...")
ds_list_add(prompts, "Compressing node_modules...")
ds_list_add(prompts, "Installing Electron...")
ds_list_add(prompts, "Updating get_pi.js...")
ds_list_add(prompts, "Fixing UI...")
ds_list_add(prompts, "Not helping customers...")
ds_list_add(prompts, "Painting canvas...")
ds_list_add(prompts, "Uglifying your face...")
ds_list_add(prompts, "Reading babel...")
ds_list_add(prompts, "Getting coffee...")
ds_list_add(prompts, "Meditating...")
ds_list_add(prompts, "Achieving zen state...")
ds_list_add(prompts, "Caching the cache...")
ds_list_add(prompts, "Virtualizing buttons...")
ds_list_add(prompts, "Receiving updates...")
ds_list_add(prompts, "Turning knobs...")
ds_list_add(prompts, "Being productive...")
ds_list_add(prompts, "Calculating RGB palette...")
ds_list_add(prompts, "Plugging in some plug-ins...")
ds_list_add(prompts, "Scanning for viruses...")
ds_list_add(prompts, "Allocating crypto miners...")
ds_list_add(prompts, "Stealing user data...")
ds_list_add(prompts, "Optimizing FPS...")
ds_list_add(prompts, "Fingerprinting fingerprints...")
ds_list_add(prompts, "Dialing tech support...")
ds_list_add(prompts, "Re-dialing tech support...")
ds_list_add(prompts, "Looking for sus...")
ds_list_add(prompts, "Tracking your IP...")
ds_list_add(prompts, "Leaping to Steins;Gate...")
ds_list_add(prompts, "Multiplying bugs...")




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(prompts)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(objSpinnyLoader) == 1
{
 with objSpinnyLoader
 {
        direction = other.rot
        image_angle = other.rot
 
 }
}

if t mod 180 == 0 and t != 0
{
ds_list_shuffle(prompts)
}

if t &gt; wait
{
    if t mod 3 == 0
    {
    p = instance_create(d+400,50+335, objSpinnyLoader)
    with p
    {
        direction = other.rot
        image_angle = other.rot
    }
    }
d+=5
}
else
{
    rot_off = rot
}

    rot += 3
t+=1

if t &gt; wait + 300
{
    with objSpinnyLoader
    {
        instance_destroy()
    }
    //instance_create(0,50, objNavbar)
    //instance_create(730, 50+75, objAddTab)
    //instance_create(0, 0, objCodePane)
    instance_create(0,0, objLicense)
    objWorld.lock_shift = false
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
mid_y = 50 + 335 + objWorld.shift_y
mid_x = d + 400+ objWorld.shift_x


//draw_rectangle_colour(x1,y1,x2,y2, c_gray,c_gray, c_gray,c_gray, false)

if t &gt; wait
    r = rot - rot_off
else
    r = 0 
draw_sprite_ext(sprite_index, 0, mid_x, mid_y, 1, 1, r, c_white, 1)
draw_set_font(ftComicSans30)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)


draw_set_color(make_colour_rgb(177,184,180))
/*draw_text(
400 + objWorld.shift_x,
150+ objWorld.shift_y,
"Please Wait",
)
*/
draw_text(
400 + objWorld.shift_x + 10,
150+ objWorld.shift_y -10,
prompts[|0],
)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
