<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTaskPane</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
names = ds_list_create()
ds_list_add(names, "Robyn Banks")
ds_list_add(names, "Eileen Dover")
ds_list_add(names, "Stan Dupp")
ds_list_add(names, "Warren Peace")
ds_list_add(names, "Lee Vitoff")
ds_list_add(names, "Hugh Mungus")
ds_list_add(names, "Heywood Jablome")
ds_list_add(names, "Mike Oxlong")

ds_list_shuffle(names)
name = names[| 0]

initials = ""
for (var i = 1; i &lt;= string_length(name);i++)
{
    c = string_char_at(name, i)
    if ord(c) &lt;=90 and c!= ' '
    {
        initials += c
    }
}

t = 0
target = 150
count = 0
char_t_mult = 3
task_done = false
temp_task = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// turn black
t = id
with all {

if object_index != objWorld and id != other.id
    instance_destroy()
}

audio_stop_sound(sndMusic)
audio_play_sound(sndEndError, 0, false)
alarm[2] = -1
background_colour = c_black
f = instance_create(0,0,objEnd)
with f alarm[0] = 100
instance_destroy()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(all)
{
    if object_index != objWorld and object_index != objWhite and object_index != objTab and object_index != objMessage
    {
        t = instance_create(x + 50, y + 50, object_index)
    }
}

audio_sound_pitch(sndError, 1 + random_range(-10,10) / 100)
audio_play_sound(sndError, 0, false)
alarm[1] = 6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objWorld.pre_exit = true

     aaaaa = instance_create(0,0,objWhite)
     aaaaa.image_alpha = 0.5
     aaaaa.image_xscale = 1281
     aaaaa.image_yscale = 721

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message(t)

if t == target and count == 0
{
    a = instance_create(840, 610, objMessage)
    a.text = "Hello!"

    with a event_user(0);
    target += 100//string_length(a.text) * char_t_mult
    count+=1
}

if t ==target and count == 1
{
    a = instance_create(840, 610, objMessage)
    a.text = "Good job on the daily scrum today pal. Will be sure to follow up with Lena Golovach during team lunch at Baleo's."
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t ==target and count == 2
{
    a = instance_create(840, 610, objMessage)
    a.text = "Also don't forget we have our 4-hour long productivity meeting later today."
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t ==target and count == 3
{
    a = instance_create(840, 610, objMessage)
    a.text = "And after that we have our fun hour. Will do some nerfing and some gunning, you know what I mean?"
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count = 999
}

if t ==target and count == 999
{
    a = instance_create(840, 610, objMessage)
    a.text = "And in the morning you have your mandatory meditation session with coach Nigel, got it?"
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count = 4
}

if t == target and count == 4
{
    a = instance_create(840, 610, objMessage)
    a.text = "A busy day full of work - great stuff!"
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}


if t == target and count == 5
{
    a = instance_create(840, 610, objMessage)
    a.text = "Anyway, the PO has asked John to ask me to ask you to write some code today, too. But only if you got time, so no pressure."
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 6
{
    a = instance_create(840, 610, objMessage)
    a.text = "I think VSCode has just received a new update. I've heard there are plenty new features for you programmers this time."
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 7
{
    a = instance_create(840, 610, objMessage)
    a.text = "Those guys sure do know how to make modern software, if I do say so myself."
    
    show_debug_message(t)
    with a event_user(0);
    target += 550//string_length(a.text) * char_t_mult
    count+=1
}

// a lag here maybe? no, this is where the thing is going to fly in
if t == target and count == 8 and task_done
{
    task_done = false
    a = instance_create(840, 610, objMessage)
    a.text = "Please start with the following code in Python, nothing tricky here."
    

    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 9
{
    a = instance_create(840, 610, objMessage)
    a.text = "print(" +'"' + "Hello, World!" + '"' +")"
    
    if instance_exists(objCodePane)
        objCodePane.active_task = objCodePane.task_1
    temp_task = 1
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 10 and task_done
{
    task_done = false
    a = instance_create(840, 610, objMessage)
    a.text = "Good job, this was a tough one! Wanna take a quick break? You deserve it."
    
    with a event_user(0);
    target += floor(string_length(a.text) * char_t_mult * 1.1)
    count+=1
}

if t == target and count == 11
{
    a = instance_create(840, 610, objMessage)
    a.text = "No? It's amazing to have such a hard working employee."
    
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 12
{
    a = instance_create(840, 610, objMessage)
    a.text = "I've got another task for you. Type out the following code in a new tab."
    
    with a event_user(0);
    target += floor(string_length(a.text) * char_t_mult * 1.1)
    count+=1
}


if t == target and count == 13
{
    a = instance_create(840, 610, objMessage)
    a.text = "x = input()#y = input()#print(x, y)#temp = x#x = y#y = temp#print(x, y)"    
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
    if instance_exists(objCodePane)
        objCodePane.active_task = objCodePane.task_2
    temp_task = 2
}

if t == target and count == 14 and task_done
{
    task_done = false
    a = instance_create(840, 610, objMessage)
    a.text = "Spectacular! Good thing we don't have atomic swaps in our single-threaded web app driven by zLoopa.js"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 15
{
    a = instance_create(840, 610, objMessage)
    a.text = "Huh, you think you can do proper concurrency? I'll make sure to bring it up with CTO during our spring planning meeting tomorrow."

      with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 16
{
    a = instance_create(840, 610, objMessage)
    a.text = "This will be very useful once we switch our UI to use WebAssembly and canvases. We'll have an entire CPU there - why not use all of it for rendering our components?"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 17
{
    a = instance_create(840, 610, objMessage)
    a.text = "Anyway, back to our monumental tasks. Please write the following Fizz Buzz program. We'll deliver it to costumers right away with our upgraded CI/CD pipeline!"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 18
{
    a = instance_create(840, 610, objMessage)
    a.text = 'for i in range(1, 101):#··fizz = "Fizz" if i % 3 == 0 else ""#··buzz = "Buzz" if i % 5 == 0 else ""#··print(f"{fizz}{buzz}" or i)'
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
    if instance_exists(objCodePane)
        objCodePane.active_task = objCodePane.task_3
    temp_task = 3
}

if t == target and count == 19 and task_done
{
    task_done = false
    a = instance_create(840, 610, objMessage)
    a.text = "Huh, seems like the CI/CD pipeline has failed and our clients are furious. I'll bring this up with Alex Boba after my lunch break."
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 20
{
    a = instance_create(840, 610, objMessage)
    a.text = "Anyway, you might've heard of our company policy of changing development languages every year? We are still deciding what language to compile to WebAssembly. If you have any ideas please let me know!"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 21
{
    a = instance_create(840, 610, objMessage)
    a.text = "Last one for today. This one should not be that hard."
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 22
{
    a = instance_create(840, 610, objMessage)
    a.text = "import math#def pythagorean_triplet(n):#··for b in range(n):#····for a in range(1, b):#······c = math.sqrt(a * a + b * b)#······if c % 1 == 0:#········print(a, b, int(c))#pythagorean_triplet(12)"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
    if instance_exists(objCodePane)
        objCodePane.active_task = objCodePane.task_4
    temp_task = 4
}

if t == target and count == 23 and task_done
{
    task_done = false
    a = instance_create(840, 610, objMessage)
    a.text = "This is perfect!"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}


if t == target and count == 24
{
    a = instance_create(840, 610, objMessage)
    a.text = "Oh btw"
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 25
{
    a = instance_create(840, 610, objMessage)
    a.text = "We have settled on compiling Haskell into WebAssembly."
    with a event_user(0);
    target += floor(string_length(a.text) * char_t_mult * 0.8)
    count+=1
}

if t == target and count == 26
{
    a = instance_create(840, 610, objMessage)
    a.text = "Good work today. See you at the gym in a bit?"
    with a event_user(0);
    target += floor(string_length(a.text) * char_t_mult * 0.5)
    count+=1
}

if t == target and count == 27
{
    a = instance_create(840, 610, objMessage)
    a.text = "Great, see ya."
    with a event_user(0);
    target += string_length(a.text) * char_t_mult
    count+=1
}

if t == target and count == 28
{
    count+=1
    objWorld.profile_subimage = 1
    alarm[0] = 70
    alarm[1] = 240
    alarm[2] = 280
}

t += 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if objCodePane.active_task != -1
//{
task_done = true
t = target - 30
temp_task = -1
if instance_exists(objCodePane)
{
objCodePane.active_task = -1
}
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_sprite(sprProfile, objWorld.profile_subimage, 820,65)

draw_set_valign(fa_middle)
draw_set_halign(fa_left)
draw_set_color(make_color_rgb(86, 118, 101))
draw_set_font(ftTabName)
draw_text(824, 85, initials)

draw_set_color(c_gray)
draw_set_font(ftTabName)
draw_text(870, 85, name)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
